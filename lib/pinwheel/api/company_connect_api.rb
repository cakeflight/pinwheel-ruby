# #Pinwheel
#
# Pinwheel is the API for Payroll
#
# The version of the OpenAPI document: v2023-11-22
# Contact: support@getpinwheel.com
# Generated by: https://openapi-generator.tech
# Generator version: 7.7.0
#

require "cgi"

module Pinwheel
  class CompanyConnectApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # List Employees
    # List all employee census data reported by the payroll platform. This is a paginated endpoint; see how Pinwheel implements pagination <a href='https://docs.pinwheelapi.com/docs/pagination-1' target='_blank'>here</a>.
    # @param company_connection_id [String] UUID of the Company Connection.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [GetV1CompanyConnectionsCompanyConnectionIdCensusGet200Response]
    def get_v1_company_connections_company_connection_id_census_get(company_connection_id, pinwheel_version, opts = {})
      data, _status_code, _headers = get_v1_company_connections_company_connection_id_census_get_with_http_info(company_connection_id, pinwheel_version, opts)
      data
    end

    # List Employees
    # List all employee census data reported by the payroll platform. This is a paginated endpoint; see how Pinwheel implements pagination &lt;a href&#x3D;&#39;https://docs.pinwheelapi.com/docs/pagination-1&#39; target&#x3D;&#39;_blank&#39;&gt;here&lt;/a&gt;.
    # @param company_connection_id [String] UUID of the Company Connection.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [Array<(GetV1CompanyConnectionsCompanyConnectionIdCensusGet200Response, Integer, Hash)>] GetV1CompanyConnectionsCompanyConnectionIdCensusGet200Response data, response status code and response headers
    def get_v1_company_connections_company_connection_id_census_get_with_http_info(company_connection_id, pinwheel_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyConnectApi.get_v1_company_connections_company_connection_id_census_get ..."
      end
      # verify the required parameter 'company_connection_id' is set
      if @api_client.config.client_side_validation && company_connection_id.nil?
        fail ArgumentError, "Missing the required parameter 'company_connection_id' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_census_get"
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_census_get"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_census_get, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_census_get, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = "/company_connections/{company_connection_id}/census".sub("{" + "company_connection_id" + "}", CGI.escape(company_connection_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:cursor] = opts[:cursor] if !opts[:cursor].nil?
      query_params[:limit] = opts[:limit] if !opts[:limit].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      header_params[:"Pinwheel-Version"] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || "GetV1CompanyConnectionsCompanyConnectionIdCensusGet200Response"

      # auth_names
      auth_names = opts[:debug_auth_names] || ["apiSecret"]

      new_options = opts.merge(
        operation: :"CompanyConnectApi.get_v1_company_connections_company_connection_id_census_get",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyConnectApi#get_v1_company_connections_company_connection_id_census_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end

    # List Employments Data
    # List all employments data reported by the payroll platform. This is a paginated endpoint; see how Pinwheel implements pagination <a href='https://docs.pinwheelapi.com/docs/pagination-1' target='_blank'>here</a>.
    # @param company_connection_id [String] UUID of the Company Connection.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [GetV1CompanyConnectionsCompanyConnectionIdEmploymentsGet200Response]
    def get_v1_company_connections_company_connection_id_employments_get(company_connection_id, pinwheel_version, opts = {})
      data, _status_code, _headers = get_v1_company_connections_company_connection_id_employments_get_with_http_info(company_connection_id, pinwheel_version, opts)
      data
    end

    # List Employments Data
    # List all employments data reported by the payroll platform. This is a paginated endpoint; see how Pinwheel implements pagination &lt;a href&#x3D;&#39;https://docs.pinwheelapi.com/docs/pagination-1&#39; target&#x3D;&#39;_blank&#39;&gt;here&lt;/a&gt;.
    # @param company_connection_id [String] UUID of the Company Connection.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [Array<(GetV1CompanyConnectionsCompanyConnectionIdEmploymentsGet200Response, Integer, Hash)>] GetV1CompanyConnectionsCompanyConnectionIdEmploymentsGet200Response data, response status code and response headers
    def get_v1_company_connections_company_connection_id_employments_get_with_http_info(company_connection_id, pinwheel_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyConnectApi.get_v1_company_connections_company_connection_id_employments_get ..."
      end
      # verify the required parameter 'company_connection_id' is set
      if @api_client.config.client_side_validation && company_connection_id.nil?
        fail ArgumentError, "Missing the required parameter 'company_connection_id' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_employments_get"
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_employments_get"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_employments_get, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_employments_get, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = "/company_connections/{company_connection_id}/employments".sub("{" + "company_connection_id" + "}", CGI.escape(company_connection_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:cursor] = opts[:cursor] if !opts[:cursor].nil?
      query_params[:limit] = opts[:limit] if !opts[:limit].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      header_params[:"Pinwheel-Version"] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || "GetV1CompanyConnectionsCompanyConnectionIdEmploymentsGet200Response"

      # auth_names
      auth_names = opts[:debug_auth_names] || ["apiSecret"]

      new_options = opts.merge(
        operation: :"CompanyConnectApi.get_v1_company_connections_company_connection_id_employments_get",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyConnectApi#get_v1_company_connections_company_connection_id_employments_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end

    # Get Company Connection
    # Get Company Connection.
    # @param company_connection_id [String] UUID of the Company Connection.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @return [PostV1CompanyConnectionsPost200Response]
    def get_v1_company_connections_company_connection_id_get(company_connection_id, pinwheel_version, opts = {})
      data, _status_code, _headers = get_v1_company_connections_company_connection_id_get_with_http_info(company_connection_id, pinwheel_version, opts)
      data
    end

    # Get Company Connection
    # Get Company Connection.
    # @param company_connection_id [String] UUID of the Company Connection.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @return [Array<(PostV1CompanyConnectionsPost200Response, Integer, Hash)>] PostV1CompanyConnectionsPost200Response data, response status code and response headers
    def get_v1_company_connections_company_connection_id_get_with_http_info(company_connection_id, pinwheel_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyConnectApi.get_v1_company_connections_company_connection_id_get ..."
      end
      # verify the required parameter 'company_connection_id' is set
      if @api_client.config.client_side_validation && company_connection_id.nil?
        fail ArgumentError, "Missing the required parameter 'company_connection_id' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_get"
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_get"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = "/company_connections/{company_connection_id}".sub("{" + "company_connection_id" + "}", CGI.escape(company_connection_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      header_params[:"Pinwheel-Version"] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || "PostV1CompanyConnectionsPost200Response"

      # auth_names
      auth_names = opts[:debug_auth_names] || ["apiSecret"]

      new_options = opts.merge(
        operation: :"CompanyConnectApi.get_v1_company_connections_company_connection_id_get",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyConnectApi#get_v1_company_connections_company_connection_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end

    # List Employee Incomes
    # List all employee income data reported by the payroll platform. This is a paginated endpoint; see how Pinwheel implements pagination <a href='https://docs.pinwheelapi.com/docs/pagination-1' target='_blank'>here</a>.
    # @param company_connection_id [String] UUID of the Company Connection.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [GetV1CompanyConnectionsCompanyConnectionIdIncomesGet200Response]
    def get_v1_company_connections_company_connection_id_incomes_get(company_connection_id, pinwheel_version, opts = {})
      data, _status_code, _headers = get_v1_company_connections_company_connection_id_incomes_get_with_http_info(company_connection_id, pinwheel_version, opts)
      data
    end

    # List Employee Incomes
    # List all employee income data reported by the payroll platform. This is a paginated endpoint; see how Pinwheel implements pagination &lt;a href&#x3D;&#39;https://docs.pinwheelapi.com/docs/pagination-1&#39; target&#x3D;&#39;_blank&#39;&gt;here&lt;/a&gt;.
    # @param company_connection_id [String] UUID of the Company Connection.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [Array<(GetV1CompanyConnectionsCompanyConnectionIdIncomesGet200Response, Integer, Hash)>] GetV1CompanyConnectionsCompanyConnectionIdIncomesGet200Response data, response status code and response headers
    def get_v1_company_connections_company_connection_id_incomes_get_with_http_info(company_connection_id, pinwheel_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyConnectApi.get_v1_company_connections_company_connection_id_incomes_get ..."
      end
      # verify the required parameter 'company_connection_id' is set
      if @api_client.config.client_side_validation && company_connection_id.nil?
        fail ArgumentError, "Missing the required parameter 'company_connection_id' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_incomes_get"
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_incomes_get"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_incomes_get, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_incomes_get, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = "/company_connections/{company_connection_id}/incomes".sub("{" + "company_connection_id" + "}", CGI.escape(company_connection_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:cursor] = opts[:cursor] if !opts[:cursor].nil?
      query_params[:limit] = opts[:limit] if !opts[:limit].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      header_params[:"Pinwheel-Version"] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || "GetV1CompanyConnectionsCompanyConnectionIdIncomesGet200Response"

      # auth_names
      auth_names = opts[:debug_auth_names] || ["apiSecret"]

      new_options = opts.merge(
        operation: :"CompanyConnectApi.get_v1_company_connections_company_connection_id_incomes_get",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyConnectApi#get_v1_company_connections_company_connection_id_incomes_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end

    # List Employee Paystubs
    # List employee paystubs data reported by the payroll platform. This is a paginated endpoint; see how Pinwheel implements pagination <a href='https://docs.pinwheelapi.com/docs/pagination-1' target='_blank'>here</a>.
    # @param company_connection_id [String] UUID of the Company Connection.
    # @param employee_external_id [String] Employee ID as reported by their employer.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [Date] :from_pay_date Filter for paystubs with pay dates after this date.
    # @option opts [Date] :to_pay_date Filter for paystubs with pay dates before this date.
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [GetV1CompanyConnectionsCompanyConnectionIdPaystubsEmployeeExternalIdGet200Response]
    def get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get(company_connection_id, employee_external_id, pinwheel_version, opts = {})
      data, _status_code, _headers = get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_with_http_info(company_connection_id, employee_external_id, pinwheel_version, opts)
      data
    end

    # List Employee Paystubs
    # List employee paystubs data reported by the payroll platform. This is a paginated endpoint; see how Pinwheel implements pagination &lt;a href&#x3D;&#39;https://docs.pinwheelapi.com/docs/pagination-1&#39; target&#x3D;&#39;_blank&#39;&gt;here&lt;/a&gt;.
    # @param company_connection_id [String] UUID of the Company Connection.
    # @param employee_external_id [String] Employee ID as reported by their employer.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [Date] :from_pay_date Filter for paystubs with pay dates after this date.
    # @option opts [Date] :to_pay_date Filter for paystubs with pay dates before this date.
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [Array<(GetV1CompanyConnectionsCompanyConnectionIdPaystubsEmployeeExternalIdGet200Response, Integer, Hash)>] GetV1CompanyConnectionsCompanyConnectionIdPaystubsEmployeeExternalIdGet200Response data, response status code and response headers
    def get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_with_http_info(company_connection_id, employee_external_id, pinwheel_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get ..."
      end
      # verify the required parameter 'company_connection_id' is set
      if @api_client.config.client_side_validation && company_connection_id.nil?
        fail ArgumentError, "Missing the required parameter 'company_connection_id' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get"
      end
      # verify the required parameter 'employee_external_id' is set
      if @api_client.config.client_side_validation && employee_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'employee_external_id' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get"
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = "/company_connections/{company_connection_id}/paystubs/{employee_external_id}".sub("{" + "company_connection_id" + "}", CGI.escape(company_connection_id.to_s)).sub("{" + "employee_external_id" + "}", CGI.escape(employee_external_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:from_pay_date] = opts[:from_pay_date] if !opts[:from_pay_date].nil?
      query_params[:to_pay_date] = opts[:to_pay_date] if !opts[:to_pay_date].nil?
      query_params[:cursor] = opts[:cursor] if !opts[:cursor].nil?
      query_params[:limit] = opts[:limit] if !opts[:limit].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      header_params[:"Pinwheel-Version"] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || "GetV1CompanyConnectionsCompanyConnectionIdPaystubsEmployeeExternalIdGet200Response"

      # auth_names
      auth_names = opts[:debug_auth_names] || ["apiSecret"]

      new_options = opts.merge(
        operation: :"CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyConnectApi#get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end

    # List Employee Paystubs
    # List employee paystubs data reported by the payroll platform. This is a paginated endpoint; see how Pinwheel implements pagination <a href='https://docs.pinwheelapi.com/docs/pagination-1' target='_blank'>here</a>.
    # @param company_connection_id [String] UUID of the Company Connection.
    # @param employee_external_id [String] Employee ID as reported by their employer.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [Date] :from_pay_date Filter for paystubs with pay dates after this date.
    # @option opts [Date] :to_pay_date Filter for paystubs with pay dates before this date.
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [GetV1CompanyConnectionsCompanyConnectionIdPaystubsEmployeeExternalIdGet200Response]
    def get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_0(company_connection_id, employee_external_id, pinwheel_version, opts = {})
      data, _status_code, _headers = get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_0_with_http_info(company_connection_id, employee_external_id, pinwheel_version, opts)
      data
    end

    # List Employee Paystubs
    # List employee paystubs data reported by the payroll platform. This is a paginated endpoint; see how Pinwheel implements pagination &lt;a href&#x3D;&#39;https://docs.pinwheelapi.com/docs/pagination-1&#39; target&#x3D;&#39;_blank&#39;&gt;here&lt;/a&gt;.
    # @param company_connection_id [String] UUID of the Company Connection.
    # @param employee_external_id [String] Employee ID as reported by their employer.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [Date] :from_pay_date Filter for paystubs with pay dates after this date.
    # @option opts [Date] :to_pay_date Filter for paystubs with pay dates before this date.
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [Array<(GetV1CompanyConnectionsCompanyConnectionIdPaystubsEmployeeExternalIdGet200Response, Integer, Hash)>] GetV1CompanyConnectionsCompanyConnectionIdPaystubsEmployeeExternalIdGet200Response data, response status code and response headers
    def get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_0_with_http_info(company_connection_id, employee_external_id, pinwheel_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_0 ..."
      end
      # verify the required parameter 'company_connection_id' is set
      if @api_client.config.client_side_validation && company_connection_id.nil?
        fail ArgumentError, "Missing the required parameter 'company_connection_id' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_0"
      end
      # verify the required parameter 'employee_external_id' is set
      if @api_client.config.client_side_validation && employee_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'employee_external_id' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_0"
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_0"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_0, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_0, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = "/company_connections/{company_connection_id}/paystubs/{employee_external_id}".sub("{" + "company_connection_id" + "}", CGI.escape(company_connection_id.to_s)).sub("{" + "employee_external_id" + "}", CGI.escape(employee_external_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:from_pay_date] = opts[:from_pay_date] if !opts[:from_pay_date].nil?
      query_params[:to_pay_date] = opts[:to_pay_date] if !opts[:to_pay_date].nil?
      query_params[:cursor] = opts[:cursor] if !opts[:cursor].nil?
      query_params[:limit] = opts[:limit] if !opts[:limit].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      header_params[:"Pinwheel-Version"] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || "GetV1CompanyConnectionsCompanyConnectionIdPaystubsEmployeeExternalIdGet200Response"

      # auth_names
      auth_names = opts[:debug_auth_names] || ["apiSecret"]

      new_options = opts.merge(
        operation: :"CompanyConnectApi.get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_0",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyConnectApi#get_v1_company_connections_company_connection_id_paystubs_employee_external_id_get_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end

    # List Company Connections
    # List all Company Connections. This is a paginated endpoint; see how Pinwheel implements pagination <a href='https://docs.pinwheelapi.com/docs/pagination-1' target='_blank'>here</a>.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [ListV1CompanyConnectionsGet200Response]
    def list_v1_company_connections_get(pinwheel_version, opts = {})
      data, _status_code, _headers = list_v1_company_connections_get_with_http_info(pinwheel_version, opts)
      data
    end

    # List Company Connections
    # List all Company Connections. This is a paginated endpoint; see how Pinwheel implements pagination &lt;a href&#x3D;&#39;https://docs.pinwheelapi.com/docs/pagination-1&#39; target&#x3D;&#39;_blank&#39;&gt;here&lt;/a&gt;.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [Array<(ListV1CompanyConnectionsGet200Response, Integer, Hash)>] ListV1CompanyConnectionsGet200Response data, response status code and response headers
    def list_v1_company_connections_get_with_http_info(pinwheel_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyConnectApi.list_v1_company_connections_get ..."
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling CompanyConnectApi.list_v1_company_connections_get"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CompanyConnectApi.list_v1_company_connections_get, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling CompanyConnectApi.list_v1_company_connections_get, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = "/company_connections"

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:cursor] = opts[:cursor] if !opts[:cursor].nil?
      query_params[:limit] = opts[:limit] if !opts[:limit].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      header_params[:"Pinwheel-Version"] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || "ListV1CompanyConnectionsGet200Response"

      # auth_names
      auth_names = opts[:debug_auth_names] || ["apiSecret"]

      new_options = opts.merge(
        operation: :"CompanyConnectApi.list_v1_company_connections_get",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyConnectApi#list_v1_company_connections_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end

    # Create Link Token
    # Create a Company Connect link token used to launch a Link modal.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param company_connect_link_token_create [CompanyConnectLinkTokenCreate]
    # @param [Hash] opts the optional parameters
    # @return [PostV1CompanyConnectLinkTokensPost200Response]
    def post_v1_company_connect_link_tokens_post(pinwheel_version, company_connect_link_token_create, opts = {})
      data, _status_code, _headers = post_v1_company_connect_link_tokens_post_with_http_info(pinwheel_version, company_connect_link_token_create, opts)
      data
    end

    # Create Link Token
    # Create a Company Connect link token used to launch a Link modal.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param company_connect_link_token_create [CompanyConnectLinkTokenCreate]
    # @param [Hash] opts the optional parameters
    # @return [Array<(PostV1CompanyConnectLinkTokensPost200Response, Integer, Hash)>] PostV1CompanyConnectLinkTokensPost200Response data, response status code and response headers
    def post_v1_company_connect_link_tokens_post_with_http_info(pinwheel_version, company_connect_link_token_create, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyConnectApi.post_v1_company_connect_link_tokens_post ..."
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling CompanyConnectApi.post_v1_company_connect_link_tokens_post"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'company_connect_link_token_create' is set
      if @api_client.config.client_side_validation && company_connect_link_token_create.nil?
        fail ArgumentError, "Missing the required parameter 'company_connect_link_token_create' when calling CompanyConnectApi.post_v1_company_connect_link_tokens_post"
      end
      # resource path
      local_var_path = "/company_connect/link_tokens"

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(["application/json"])
      if !content_type.nil?
        header_params["Content-Type"] = content_type
      end
      header_params[:"Pinwheel-Version"] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(company_connect_link_token_create)

      # return_type
      return_type = opts[:debug_return_type] || "PostV1CompanyConnectLinkTokensPost200Response"

      # auth_names
      auth_names = opts[:debug_auth_names] || ["apiSecret"]

      new_options = opts.merge(
        operation: :"CompanyConnectApi.post_v1_company_connect_link_tokens_post",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyConnectApi#post_v1_company_connect_link_tokens_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end

    # Create Company Connection
    # Create a Company Connection used to get income & employment data from your target company.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param company_connection_create [CompanyConnectionCreate]
    # @param [Hash] opts the optional parameters
    # @return [PostV1CompanyConnectionsPost200Response]
    def post_v1_company_connections_post(pinwheel_version, company_connection_create, opts = {})
      data, _status_code, _headers = post_v1_company_connections_post_with_http_info(pinwheel_version, company_connection_create, opts)
      data
    end

    # Create Company Connection
    # Create a Company Connection used to get income &amp; employment data from your target company.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param company_connection_create [CompanyConnectionCreate]
    # @param [Hash] opts the optional parameters
    # @return [Array<(PostV1CompanyConnectionsPost200Response, Integer, Hash)>] PostV1CompanyConnectionsPost200Response data, response status code and response headers
    def post_v1_company_connections_post_with_http_info(pinwheel_version, company_connection_create, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyConnectApi.post_v1_company_connections_post ..."
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling CompanyConnectApi.post_v1_company_connections_post"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'company_connection_create' is set
      if @api_client.config.client_side_validation && company_connection_create.nil?
        fail ArgumentError, "Missing the required parameter 'company_connection_create' when calling CompanyConnectApi.post_v1_company_connections_post"
      end
      # resource path
      local_var_path = "/company_connections"

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(["application/json"])
      if !content_type.nil?
        header_params["Content-Type"] = content_type
      end
      header_params[:"Pinwheel-Version"] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(company_connection_create)

      # return_type
      return_type = opts[:debug_return_type] || "PostV1CompanyConnectionsPost200Response"

      # auth_names
      auth_names = opts[:debug_auth_names] || ["apiSecret"]

      new_options = opts.merge(
        operation: :"CompanyConnectApi.post_v1_company_connections_post",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyConnectApi#post_v1_company_connections_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end
  end
end
