# #Pinwheel
#
# Pinwheel is the API for Payroll
#
# The version of the OpenAPI document: v2023-11-22
# Contact: support@getpinwheel.com
# Generated by: https://openapi-generator.tech
# Generator version: 7.7.0
#

require "cgi"

module Pinwheel
  class JobsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # List Completed Jobs
    # List all completed jobs which were initiated by Link (i.e., excluding refresh jobs for monitoring). This is a paginated endpoint; see how Pinwheel implements pagination <a href='https://docs.pinwheelapi.com/docs/pagination-1' target='_blank'>here</a>.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :link_token_id UUID of the link token triggering the job.
    # @option opts [String] :account_id UUID of the payroll account.
    # @option opts [Array<String>] :job_types List of job types. May be expanded to include new enum values (see our Change Management policy).
    # @option opts [String] :outcome The outcome of the job.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Time] :from_timestamp Return results after this ISO 8601 timestamp.
    # @option opts [Time] :to_timestamp Return results to this ISO 8601 timestamp.
    # @return [GetJobsV1JobsGet200Response]
    def get_jobs_v1_jobs_get(pinwheel_version, opts = {})
      data, _status_code, _headers = get_jobs_v1_jobs_get_with_http_info(pinwheel_version, opts)
      data
    end

    # List Completed Jobs
    # List all completed jobs which were initiated by Link (i.e., excluding refresh jobs for monitoring). This is a paginated endpoint; see how Pinwheel implements pagination &lt;a href&#x3D;&#39;https://docs.pinwheelapi.com/docs/pagination-1&#39; target&#x3D;&#39;_blank&#39;&gt;here&lt;/a&gt;.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :link_token_id UUID of the link token triggering the job.
    # @option opts [String] :account_id UUID of the payroll account.
    # @option opts [Array<String>] :job_types List of job types. May be expanded to include new enum values (see our Change Management policy).
    # @option opts [String] :outcome The outcome of the job.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Time] :from_timestamp Return results after this ISO 8601 timestamp.
    # @option opts [Time] :to_timestamp Return results to this ISO 8601 timestamp.
    # @return [Array<(GetJobsV1JobsGet200Response, Integer, Hash)>] GetJobsV1JobsGet200Response data, response status code and response headers
    def get_jobs_v1_jobs_get_with_http_info(pinwheel_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: JobsApi.get_jobs_v1_jobs_get ..."
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling JobsApi.get_jobs_v1_jobs_get"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      allowable_values = ["income", "tax_forms", "paystubs", "direct_deposit_payment", "employment", "shifts", "identity", "direct_deposit_allocations", "direct_deposit_switch"]
      if @api_client.config.client_side_validation && opts[:job_types] && !opts[:job_types].all? { |item| allowable_values.include?(item) }
        fail ArgumentError, "invalid value for \"job_types\", must include one of #{allowable_values}"
      end
      allowable_values = ["pending", "error", "success"]
      if @api_client.config.client_side_validation && opts[:outcome] && !allowable_values.include?(opts[:outcome])
        fail ArgumentError, "invalid value for \"outcome\", must be one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling JobsApi.get_jobs_v1_jobs_get, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:limit].nil? && opts[:limit] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling JobsApi.get_jobs_v1_jobs_get, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = "/jobs"

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:link_token_id] = opts[:link_token_id] if !opts[:link_token_id].nil?
      query_params[:account_id] = opts[:account_id] if !opts[:account_id].nil?
      query_params[:job_types] = @api_client.build_collection_param(opts[:job_types], :multi) if !opts[:job_types].nil?
      query_params[:outcome] = opts[:outcome] if !opts[:outcome].nil?
      query_params[:limit] = opts[:limit] if !opts[:limit].nil?
      query_params[:cursor] = opts[:cursor] if !opts[:cursor].nil?
      query_params[:from_timestamp] = opts[:from_timestamp] if !opts[:from_timestamp].nil?
      query_params[:to_timestamp] = opts[:to_timestamp] if !opts[:to_timestamp].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      header_params[:"Pinwheel-Version"] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || "GetJobsV1JobsGet200Response"

      # auth_names
      auth_names = opts[:debug_auth_names] || ["apiSecret"]

      new_options = opts.merge(
        operation: :"JobsApi.get_jobs_v1_jobs_get",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: JobsApi#get_jobs_v1_jobs_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end
  end
end
