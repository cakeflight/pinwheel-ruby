=begin
#Pinwheel

#Pinwheel is the API for Payroll

The version of the OpenAPI document: v2023-11-22
Contact: support@getpinwheel.com
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'cgi'

module Pinwheel
  class WebhooksApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Delete Webhook
    # Delete a webhook.
    # @param webhook_id [String] UUID of the webhook.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def delete_v1_webhooks_webhook_id_delete(webhook_id, pinwheel_version, opts = {})
      data, _status_code, _headers = delete_v1_webhooks_webhook_id_delete_with_http_info(webhook_id, pinwheel_version, opts)
      data
    end

    # Delete Webhook
    # Delete a webhook.
    # @param webhook_id [String] UUID of the webhook.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def delete_v1_webhooks_webhook_id_delete_with_http_info(webhook_id, pinwheel_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksApi.delete_v1_webhooks_webhook_id_delete ...'
      end
      # verify the required parameter 'webhook_id' is set
      if @api_client.config.client_side_validation && webhook_id.nil?
        fail ArgumentError, "Missing the required parameter 'webhook_id' when calling WebhooksApi.delete_v1_webhooks_webhook_id_delete"
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling WebhooksApi.delete_v1_webhooks_webhook_id_delete"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = '/webhooks/{webhook_id}'.sub('{' + 'webhook_id' + '}', CGI.escape(webhook_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Pinwheel-Version'] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiSecret']

      new_options = opts.merge(
        :operation => :"WebhooksApi.delete_v1_webhooks_webhook_id_delete",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksApi#delete_v1_webhooks_webhook_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Webhooks
    # List all webhooks. This is a paginated endpoint; see how Pinwheel implements pagination <a href='https://docs.pinwheelapi.com/docs/pagination-1' target='_blank'>here</a>.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [GetV1WebhooksGet200Response]
    def get_v1_webhooks_get(pinwheel_version, opts = {})
      data, _status_code, _headers = get_v1_webhooks_get_with_http_info(pinwheel_version, opts)
      data
    end

    # List Webhooks
    # List all webhooks. This is a paginated endpoint; see how Pinwheel implements pagination &lt;a href&#x3D;&#39;https://docs.pinwheelapi.com/docs/pagination-1&#39; target&#x3D;&#39;_blank&#39;&gt;here&lt;/a&gt;.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :cursor Cursor for the page you want to retrieve.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @return [Array<(GetV1WebhooksGet200Response, Integer, Hash)>] GetV1WebhooksGet200Response data, response status code and response headers
    def get_v1_webhooks_get_with_http_info(pinwheel_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksApi.get_v1_webhooks_get ...'
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling WebhooksApi.get_v1_webhooks_get"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling WebhooksApi.get_v1_webhooks_get, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling WebhooksApi.get_v1_webhooks_get, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/webhooks'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Pinwheel-Version'] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'GetV1WebhooksGet200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiSecret']

      new_options = opts.merge(
        :operation => :"WebhooksApi.get_v1_webhooks_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksApi#get_v1_webhooks_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Webhook
    # Get webhook by id.
    # @param webhook_id [String] UUID of the webhook.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @return [PostV1WebhooksPost200Response]
    def get_webhook_by_id_v1_webhooks_webhook_id_get(webhook_id, pinwheel_version, opts = {})
      data, _status_code, _headers = get_webhook_by_id_v1_webhooks_webhook_id_get_with_http_info(webhook_id, pinwheel_version, opts)
      data
    end

    # Get Webhook
    # Get webhook by id.
    # @param webhook_id [String] UUID of the webhook.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param [Hash] opts the optional parameters
    # @return [Array<(PostV1WebhooksPost200Response, Integer, Hash)>] PostV1WebhooksPost200Response data, response status code and response headers
    def get_webhook_by_id_v1_webhooks_webhook_id_get_with_http_info(webhook_id, pinwheel_version, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksApi.get_webhook_by_id_v1_webhooks_webhook_id_get ...'
      end
      # verify the required parameter 'webhook_id' is set
      if @api_client.config.client_side_validation && webhook_id.nil?
        fail ArgumentError, "Missing the required parameter 'webhook_id' when calling WebhooksApi.get_webhook_by_id_v1_webhooks_webhook_id_get"
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling WebhooksApi.get_webhook_by_id_v1_webhooks_webhook_id_get"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = '/webhooks/{webhook_id}'.sub('{' + 'webhook_id' + '}', CGI.escape(webhook_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Pinwheel-Version'] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'PostV1WebhooksPost200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiSecret']

      new_options = opts.merge(
        :operation => :"WebhooksApi.get_webhook_by_id_v1_webhooks_webhook_id_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksApi#get_webhook_by_id_v1_webhooks_webhook_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create Webhook
    # Create a webhook to use for callbacks from Pinwheel jobs.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param webhook_create_v20230418 [WebhookCreateV20230418] 
    # @param [Hash] opts the optional parameters
    # @return [PostV1WebhooksPost200Response]
    def post_v1_webhooks_post(pinwheel_version, webhook_create_v20230418, opts = {})
      data, _status_code, _headers = post_v1_webhooks_post_with_http_info(pinwheel_version, webhook_create_v20230418, opts)
      data
    end

    # Create Webhook
    # Create a webhook to use for callbacks from Pinwheel jobs.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param webhook_create_v20230418 [WebhookCreateV20230418] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PostV1WebhooksPost200Response, Integer, Hash)>] PostV1WebhooksPost200Response data, response status code and response headers
    def post_v1_webhooks_post_with_http_info(pinwheel_version, webhook_create_v20230418, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksApi.post_v1_webhooks_post ...'
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling WebhooksApi.post_v1_webhooks_post"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'webhook_create_v20230418' is set
      if @api_client.config.client_side_validation && webhook_create_v20230418.nil?
        fail ArgumentError, "Missing the required parameter 'webhook_create_v20230418' when calling WebhooksApi.post_v1_webhooks_post"
      end
      # resource path
      local_var_path = '/webhooks'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Pinwheel-Version'] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(webhook_create_v20230418)

      # return_type
      return_type = opts[:debug_return_type] || 'PostV1WebhooksPost200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiSecret']

      new_options = opts.merge(
        :operation => :"WebhooksApi.post_v1_webhooks_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksApi#post_v1_webhooks_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update Webhook
    # Update webhook.
    # @param webhook_id [String] UUID of the webhook.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param webhook_update [WebhookUpdate] 
    # @param [Hash] opts the optional parameters
    # @return [PostV1WebhooksPost200Response]
    def put_v1_webhooks_webhook_id_put(webhook_id, pinwheel_version, webhook_update, opts = {})
      data, _status_code, _headers = put_v1_webhooks_webhook_id_put_with_http_info(webhook_id, pinwheel_version, webhook_update, opts)
      data
    end

    # Update Webhook
    # Update webhook.
    # @param webhook_id [String] UUID of the webhook.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param webhook_update [WebhookUpdate] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PostV1WebhooksPost200Response, Integer, Hash)>] PostV1WebhooksPost200Response data, response status code and response headers
    def put_v1_webhooks_webhook_id_put_with_http_info(webhook_id, pinwheel_version, webhook_update, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WebhooksApi.put_v1_webhooks_webhook_id_put ...'
      end
      # verify the required parameter 'webhook_id' is set
      if @api_client.config.client_side_validation && webhook_id.nil?
        fail ArgumentError, "Missing the required parameter 'webhook_id' when calling WebhooksApi.put_v1_webhooks_webhook_id_put"
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling WebhooksApi.put_v1_webhooks_webhook_id_put"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'webhook_update' is set
      if @api_client.config.client_side_validation && webhook_update.nil?
        fail ArgumentError, "Missing the required parameter 'webhook_update' when calling WebhooksApi.put_v1_webhooks_webhook_id_put"
      end
      # resource path
      local_var_path = '/webhooks/{webhook_id}'.sub('{' + 'webhook_id' + '}', CGI.escape(webhook_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Pinwheel-Version'] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(webhook_update)

      # return_type
      return_type = opts[:debug_return_type] || 'PostV1WebhooksPost200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['apiSecret']

      new_options = opts.merge(
        :operation => :"WebhooksApi.put_v1_webhooks_webhook_id_put",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WebhooksApi#put_v1_webhooks_webhook_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
