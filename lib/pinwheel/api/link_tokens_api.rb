# #Pinwheel
#
# Pinwheel is the API for Payroll
#
# The version of the OpenAPI document: v2023-11-22
# Contact: support@getpinwheel.com
# Generated by: https://openapi-generator.tech
# Generator version: 7.7.0
#

require "cgi"

module Pinwheel
  class LinkTokensApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Create Link Token
    # Create a token used to launch a Link modal.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param link_token_create_v20231122 [LinkTokenCreateV20231122]
    # @param [Hash] opts the optional parameters
    # @return [PostV1LinkTokensPost200Response]
    def post_v1_link_tokens_post(pinwheel_version, link_token_create_v20231122, opts = {})
      data, _status_code, _headers = post_v1_link_tokens_post_with_http_info(pinwheel_version, link_token_create_v20231122, opts)
      data
    end

    # Create Link Token
    # Create a token used to launch a Link modal.
    # @param pinwheel_version [String] Version identifier specifying how the Pinwheel API should behave. See the Change Management page for more information.
    # @param link_token_create_v20231122 [LinkTokenCreateV20231122]
    # @param [Hash] opts the optional parameters
    # @return [Array<(PostV1LinkTokensPost200Response, Integer, Hash)>] PostV1LinkTokensPost200Response data, response status code and response headers
    def post_v1_link_tokens_post_with_http_info(pinwheel_version, link_token_create_v20231122, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: LinkTokensApi.post_v1_link_tokens_post ..."
      end
      # verify the required parameter 'pinwheel_version' is set
      if @api_client.config.client_side_validation && pinwheel_version.nil?
        fail ArgumentError, "Missing the required parameter 'pinwheel_version' when calling LinkTokensApi.post_v1_link_tokens_post"
      end
      # verify enum value
      allowable_values = ["2023-11-22", "2023-07-18", "2023-04-18", "2022-09-09", "2022-06-22", "2022-03-02"]
      if @api_client.config.client_side_validation && !allowable_values.include?(pinwheel_version)
        fail ArgumentError, "invalid value for \"pinwheel_version\", must be one of #{allowable_values}"
      end
      # verify the required parameter 'link_token_create_v20231122' is set
      if @api_client.config.client_side_validation && link_token_create_v20231122.nil?
        fail ArgumentError, "Missing the required parameter 'link_token_create_v20231122' when calling LinkTokensApi.post_v1_link_tokens_post"
      end
      # resource path
      local_var_path = "/link_tokens"

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(["application/json"])
      if !content_type.nil?
        header_params["Content-Type"] = content_type
      end
      header_params[:"Pinwheel-Version"] = pinwheel_version

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(link_token_create_v20231122)

      # return_type
      return_type = opts[:debug_return_type] || "PostV1LinkTokensPost200Response"

      # auth_names
      auth_names = opts[:debug_auth_names] || ["apiSecret"]

      new_options = opts.merge(
        operation: :"LinkTokensApi.post_v1_link_tokens_post",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LinkTokensApi#post_v1_link_tokens_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end
  end
end
